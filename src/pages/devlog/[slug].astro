---
// src/pages/devlog/[slug].astro
import Base from "../../layouts/Base.astro";
import list from "../../data/devlog.json";
import "../../styles/devlog.css";

/** Generate static paths from the union of JSON + optional Markdown posts */
export function getStaticPaths() {
  // Eager-load all markdown modules at build time
  const mdModules = import.meta.glob("../../content/devlog/*.md", { eager: true });

  // Extract slugs from file paths like ".../content/devlog/<slug>.md"
  const slugsFromMd = Object.keys(mdModules).map((p) => p.split("/").pop().replace(/\.md$/, ""));
  const slugsFromJson = list.map((p) => p.slug);

  const allSlugs = Array.from(new Set([...slugsFromJson, ...slugsFromMd]));

  return allSlugs.map((slug) => {
    const jsonMeta = list.find((p) => p.slug === slug) || {};
    // @ts-ignore frontmatter depends on your md files
    const fm = mdModules[`../../content/devlog/${slug}.md`]?.frontmatter ?? {};
    const meta = {
      title:   fm.title   ?? jsonMeta.title   ?? slug,
      date:    fm.date    ?? jsonMeta.date    ?? "",
      summary: fm.summary ?? jsonMeta.summary ?? "Devlog post",
    };
    // Pass a flag so the page knows whether MD exists
    const hasMd = Boolean(mdModules[`../../content/devlog/${slug}.md`]);
    return { params: { slug }, props: { meta, hasMd } };
  });
}

// Props injected by getStaticPaths
const { meta, hasMd } = Astro.props;
const slug = Astro.params.slug;

// If we have a Markdown file for this slug, grab its compiled component
let Content;
if (hasMd) {
  const mod = await import(`../../content/devlog/${slug}.md`);
  Content = mod.default;
}

const title = meta.title;
const date  = meta.date;
const desc  = meta.summary;
const dateStr = date ? new Date(date).toLocaleDateString("en-GB", { year:"numeric", month:"long", day:"numeric" }) : "";
---

<Base title={title} description={desc} pageClass="page-devlog">
  <section class="devlog-container">
    <a href="/devlog" class="btn btn-secondary mb-6">‚Üê Back to Devlog</a>

    <h1 class="devlog-heading" data-reveal>{title}</h1>
    {dateStr && <p class="devlog-card-date">{dateStr}</p>}

    {Content ? (
      <article class="devlog-article" data-reveal>
        <Content />
      </article>
    ) : (
      <article class="devlog-card" data-reveal>
        <p class="devlog-card-summary">{desc}</p>
        <p class="devlog-card-date" style="margin-top:0.5rem;">Full post coming soon.</p>
      </article>
    )}
  </section>
</Base>
