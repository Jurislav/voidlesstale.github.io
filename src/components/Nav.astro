---
const { className = "" } = Astro.props;
---
<nav class={`fixed top-0 inset-x-0 z-50 backdrop-blur bg-bg1/60 border-b border-accent/20 ${className}`}>
  <div class="mx-auto max-w-6xl px-4 h-14 flex items-center justify-between">
    <a href="/" class="font-heading text-lg">Voidless Tale</a>
    <ul class="flex items-center gap-4 text-sm">
      <li><a href="/wiki" class="hover:text-accent focus-visible:outline focus-visible:outline-2 focus-visible:outline-accent">Wiki</a></li>
      <li><a href="/devlog" class="hover:text-accent focus-visible:outline focus-visible:outline-2 focus-visible:outline-accent">Devlog</a></li>
      <li><a href="/smith" class="hover:text-accent focus-visible:outline focus-visible:outline-2 focus-visible:outline-accent">Voidless Smith</a></li>
      <!-- Theme switch on the right -->
      <li class="ml-auto flex items-center">
      <button
      id="nav-theme-toggle"
      data-action="toggle-theme"
      class="btn btn-secondary"
      aria-pressed="false"
      aria-label="Switch theme"
      title="Switch theme"
      >
      <!-- tiny icon-like dot -->
      <span aria-hidden="true" class="mr-2 inline-block h-2 w-2 rounded-full"
            style="background: var(--accent);"></span>
      <span data-theme-label>Hell</span>
      </button>
      </li>
    </ul>
  </div>
  

  <!-- inline updater for the label/aria-pressed -->
  <script is:inline>
    (function(){
      const root = document.documentElement;
      const btn  = document.getElementById('nav-theme-toggle');
      const lab  = btn?.querySelector('[data-theme-label]');
      function applyLabel(t){
        if (!lab || !btn) return;
        const isHeaven = t === 'heaven';
        lab.textContent = isHeaven ? 'Heaven' : 'Hell';
        btn.setAttribute('aria-pressed', String(isHeaven));
      }
      // initial
      applyLabel(root.dataset.theme || 'hell');
      // react to global events
      document.addEventListener('vt-theme-changed', e => applyLabel(e.detail));
    })();
  </script>
</nav>
